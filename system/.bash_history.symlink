ping 8.8.8.8
sudo apt-get update
sudo vi /etc/systemd/logind.conf 
ip a
ping 8.8.8.8
sudo ufw disable
sudo apt-get install ssh*
sudo vi /etc/systemd/logind.conf
nano vi /etc/systemd/logind.conf
nano /etc/systemd/logind.conf
sudo nano /etc/systemd/logind.conf
sudo reboot 
ping 8.8.8.
sudo apt-get install network-manager-openvpn
sudo apt-get install network-manager-openvpn network-manager-openvpn-gnome
sudo apt-get install network-manager-pptp
sudo apt-get install network-manager-vpnc
sudo reboot 
ping 8.8.8.8
cd /home/eyallevy/
ls -la
cd openvpnkey/
ll
cd ..
ls -la
java
whereis java
/usr/bin/java -version
cd /usr/bin/java

ls /
cd /
ls
cd /home/
pwd
ls
cdeyallevy
cd eyallevy
ls
cd Downloads/
tar 
tar --usage
archiveclear
clear
tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz /opt/idea
mkdir /opt/idea
sudo mkdir /opt/idea
tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz /opt/idea
tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz /opt/idea/
tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz
tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz .
sudo tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz .
sudo tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz /opt/idea
sudo chmod 755 /opt

sudo tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz .
sudo tar -czvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz ./
sudo tar -xzvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz .
sudo tar -xzvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz -C ./
sudo tar -xzvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz -C /opt/idea
sudo tar -xzvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz
ls -al /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz 
sudo tar -xzvf /home/eyallevy/Downloads/ideaIU-2016.3.2.tar.gz -C /opt/idea
mv idea-IU-163.10154.41/* .
sudo mv -f idea-IU-163.10154.41/* .
cd bin/
ls
. idea.sh
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
echo $JAVA_HOME
less /proc/cpuinfo 
less /proc/meminfo 
lshw
sudo vi ~/.bashrc
sudo gedit ~/.bashrc
echo $JAVA_HOME
source ~/.bashrc
echo $JAVA_HOME
clear
sudo apt-get install maven
mvn
cd /usr/lib/
ls -la
cd jvm
ls
cd java-8-oracle/
ls
sudo gedit ~/.bashrc
sudo source ~/.bashrc
source ~/.bashrc
mvn
touch /opt/locations
sudo touch /opt/locations.txt
sudo gedit /opt/locations.txt 
ssh-add ~/.ssh/id_rsa 
ssh-add -l 
cat ~/.ssh/id_rsa.pub
cat ~/.ssh/id_rsa.pub | xclip -sel clip
cd /opt/git
git clone https://eyallevy@bitbucket.org/thetaray/detection-center.git
git
sudo apt install git
git clone https://eyallevy@bitbucket.org/thetaray/detection-center.git
ssh -V
ls -a ~/.ssh 
ssh-keygen
ls -a ~/.ssh 
ps -e | grep [s]sh-agent
ssh-agent /bin/bash
git pull
ssh-agent /bin/bash
git pull
cd ..
git clone git@bitbucket.org:thetaray/tr-spark-ml.git
mv ~/Downloads/settings.xml ~/.m2
cp -f ~/.m2/settings.xml /opt/setup/
sudo mkdir  /opt/setup/
cp -f ~/.m2/settings.xml /opt/setup/
sudo cp -f ~/.m2/settings.xml /opt/setup/
sudo mv /opt/locations.txt  /opt/setup/
chmod -R 777 /opt
sudo chmod -R 777 /opt
sudo apt install gnome-online-accounts
gnome-control-center online-accounts
cd etc/apt/sources.list.d
cd /etc/apt/sources.list.d
ls
touch backports.list
sudo touch backports.list
sudo vi backports.list
vim
sudo apt install vim
sudo vim backports.list
apt-get update
sudo apt-get update
apt-get purge "lxc-docker*"
sudo apt-get purge "lxc-docker*"
apt-get purge "docker.io*"
sudo apt-get purge "docker.io*"
sudo apt-get update
apt-get install apt-transport-https ca-certificates gnupg2
sudo apt-get install apt-transport-https ca-certificates gnupg2
uname -r
sudo apt-get install apt-transport-https ca-certificates
sudo apt-key adv                --keyserver hkp://ha.pool.sks-keyservers.net:80                --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
echo deb https://apt.dockerproject.org/repo ubuntu-xenial main | sudo tee /etc/apt/sources.list.d/docker.list
cat /etc/apt/sources.list.d/docker.list
$ sudo apt-get update
sudo apt-get update
apt-cache policy docker-engine
sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual
sudo apt-get install docker-engine
sudo service docker start
sudo service docker status
sudo vim /etc/default/docker 
sudo mkdir /etc/systemd/system/docker.service.d
sudo touch  /etc/systemd/system/docker.service.d/docker.conf
sudo vim /etc/systemd/system/docker.service.d/docker.conf
cd /usr/bin
cat docker
cd /etc/systemd/system/docker.service.d
ls
sudo service docker restart
sudo service docker status
sudo service docker start
sudo mv docker.conf docker.service
sudo service docker start
systemctl status docker.socket
journalctl -xe
cd ..
sudo mv docker.service.d /tmp
ls
ll
ls  /etc/default/docker
cd   /etc/default/docker
cd   /etc/default
cat docker 
sudo service docker start
sudo apt-get install docker-engine
sudo service docker start
sudo service docker status
sudo mv  /tmp/docker.service.d /etc/systemd/system/
cd /etc/systemd/system/
ls
cat docker.service.d/
cd docker.service.d/
ls
cat docker.service 
sudo mv  docker.service docker.conf
sudo vim  docker.conf
sudo service docker status
sudo service --help
sudo service --status-all
sudo service docker status
sudo vim  docker.conf
sudo service docker status
sudo vim  docker.conf
sudo systemctl start docker
systemctl status docker.service
sudo gedit docker.conf
cd ..
ls
sudo gedit /etc/default/docker
systemctl show docker | grep EnvironmentFile
systemctl show
systemctl show --property=FragmentPath docker
grep EnvironmentFile /usr/lib/systemd/system/docker.service
sudo service docker status
sudo service docker start
sudo service docker status
sudo mv /usr/lib/systemd/system/doc
sudo mv /etc/systemd/system/docker.service.d/ /tmp
sudo ls /etc/systemd/system
sudo service docker status
docker daemon
sudo docker daemon
docker daemon -H fd://
sudo docker daemon -H fd://
systemctl status docker.socket
service --status-all
service --status-all | grep docker
which docker
ll /usr/bin/docker
cd /usr/bin/
ll
ll| grep dock
service docker start
sudo service docker start
cd /etc/init.d/
ll
ll docker 
vi docker 
cd /var/log/
ll
ll docker
ll 
vi /etc/init.d/docker 
vi /etc/default/docker 
vi /etc/init.d/docker 
cd /etc/init.d/
ll docker 
sh -x ./docker
sh -x ./docker start
sudo sh -x ./docker start
clear
sudo sh -x ./docker start
sudo systemctl start docker
systemctl status docker.service
sudo apt-get docker remove
sudo apt-get  remove docker
which docker
sudo apt-get list
sudo apt-get ls
sudo apt-get
sudo apt-get autoclean
sudo apt-get 
sudo apt-get  remove docker-engine
which docker
sudo apt-get  install docker-engine
sudo service docker start
sudo service docker status
docker ps
sudo docker ps
sudo docker ps -a
ll /etc/default/docker 
cat /etc/default/docker 
ll /var/run/docker.sock 
sudo docker status
sudo service docker status
sudo docker ps
sudo service docker status
sudo /opt/idea/bin/idea
sudo /opt/idea/bin/idea.sh
sudo /opt/idea/bin/idea.sh &
kill %1
jobs
jps
ps | grep idea
ps -ef 
cat /etc/default/docker 
sudo groupadd docker
cat /etc/groups
cat /etc/group
sudo usermod -aG docker $USER
cat /etc/group
cat /etc/default/docker 
whicw socat
whice socat
which socat
sudo apt-get install socat
sudo apt-get install tldr
man socat
socat unix:///var/run/docker.sock 
socat -h
sudo apt-get install nc
sudo service docker status
sudo service docker status > txt.txt
cat txt.txt 
rm txt.txt 
ll -a  ~/
ll -a /etc/docker/
sudo ll -a /etc/docker/
sudo ls /etc/docker/
openssl genrsa -out client.key 4096
openssl req -new -x509 -text -key client.key -out client.cert
sudo ls /etc/docker/
ll
ll /etc/docker/
sudo ls -l /etc/docker/
sudo cat /etc/docker/key.json
clear
sudo apt-get remove docker-engine
which docker
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates
sudo apt autoremove
sudo apt-get install apt-transport-https ca-certificates
sudo apt-key adv                --keyserver hkp://ha.pool.sks-keyservers.net:80                --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
echo deb https://apt.dockerproject.org/repo ubuntu-xenial main | sudo tee /etc/apt/sources.list.d/docker.list
sudo apt-get update
apt-cache policy docker-engine
sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual
sudo apt-get install docker-engine
sudo service docker start
sudo docker run hello-world
docker ps
sudo docker ps
sudo docker ps -a
history | grep sock
ll /var/run/docker.sock 
date
history | grep cer
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:latest
cat /etc/groups
cat /etc/group
sudo docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:latest
cat /etc/default/docker 
sudo docker run -d -p 5432:5432 --name tr-psql
sudo docker run -d -p 5432:5432 --name tr-psql tr-postgres:latest
sudo docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:latest
sudo docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres
mkdir  /etc/systemd/system/docker.service.d
sudo mkdir  /etc/systemd/system/docker.service.d
cd /etc/systemd/system/docker.service.d
sudo touch docker.conf
sudo vim docker.conf 
sudo service docker restart
sudo service docker status
sudo docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres
cd /opt/git/detection-center/
mvn clean install
cd ..
cd tr-spark-ml/
mvn clean install
sudo service docker status
vim /etc/group
sudo vim /etc/group
sudo add-apt-repository ppa:noobslab/indicators
ping http://docker-registry.thetaray-aws.com/
ping docker-registry.thetaray-aws.com/
ping docker-registry.thetaray-aws.com
mvn clean install
sudo chmod -R 777 /opt/git
curl
sudo apt-get install curl
curl --unix-socket /var/run/docker.sock http://containers/json
curl --unix-socket /var/run/docker.sock http://localhost/containers/json
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:latest
cd /etc/systemd/system/docker.service.d
ls
cat docker.conf 
sudo service docker restart
vi /etc/default/docker
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres
journalctl -u docker.service
sudo journalctl -fu docker.service
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.1.18
docker run -d -p 5432:5432 --name tr-psql 172.16.1.191:5000/thetaray/tr-postgres:2.1.1.18
cd /
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.1-SNAPSHOT.1172
docker ps
cd /etc/systemd/system/docker.service.d
cat docker.conf 
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.1-SNAPSHOT.1325
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
cd /
sudo vim /etc/default/docker
sudo service docker restart
mv /etc/systemd/system/docker.service.d/ /opt/tmp
sudo mv /etc/systemd/system/docker.service.d/ /opt/tmp
ls /etc/systemd/system
sudo service docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.68:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
ping 172.16.1.68
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo mv /opt/tmp/docker.service.d /etc/systemd/system/
cd /opt/tmp/docker.service.d
cd /etc/systemd/system/
ls
cat docker.service.d/docker.conf 
sudo vim docker.service.d/docker.conf 
sudo mv /etc/systemd/system/docker.service.d/ /opt/tmp
sudo ls /etc/systemd/system/docker.service.d
ls /etc/systemd/system/docker.service.d
ls 
sudo status docker
tail -f /var/log/upstart/docker.log
sudo journalctl -u docker
sudo service status docker
sudo service  docker status
cd /opt/tmp
sudo service  docker status > txt.txt
cat txt.txt 
cat /etc/default/docker 
sudo vim /etc/default/docker 
sudo service  docker restart
sudo service  docker status
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo journalctl -fu docker.service
cat /etc/init/docker.conf
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo vim /etc/default/docker 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:
sudo vim /etc/default/docker 
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
docker -version
docker -v
sudo vim /etc/default/docker 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo vim /etc/default/docker 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
ls
sudo cp -r docker.service.d/ /etc/systemd/system/
ls /etc/systemd/system/
sudo vim /etc/systemd/system/docker.service.d/docker.conf 
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo vim /etc/systemd/system/docker.service.d/docker.conf 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo vim /etc/systemd/system/docker.service.d/docker.conf 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo vim /etc/systemd/system/docker.service.d/docker.conf 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
sudo mv /etc/systemd/system/docker.service.d /opt/tmp
sudo mv -f /etc/systemd/system/docker.service.d /opt/tmp
sudo rm -f /etc/systemd/system/docker.service.d
sudo rm -rf /etc/systemd/system/docker.service.d
sudo service  docker restart
vi /etc/default/docker 
sudo vi /etc/default/docker 
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
docker -v
ping docker-registry.thetaray-aws.com
sudo vi  /etc/docker/daemon.json
sudo touch  /etc/docker/daemon.json
sudo vi  /etc/docker/daemon.json
sudo service  docker restart
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325 --insecure-registry 172.16.1.191:5000
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1325 --insecure-registry 172.16.1.191:5000
sudo vi /etc/default/docker 
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1327
docker run --name tr-postgres2 -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1327
docker images
sudo rm  /etc/docker/daemon.json
ls /etc/systemd/system
sudo service  docker restart
docker run --name tr-postgres2 -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-activemq:2.1.1
sudo touch  /etc/docker/daemon.json
sudo vi  /etc/docker/daemon.json
sudo service  docker restart
docker run --name tr-postgres2 -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-activemq:2.1.1
docker ps -a -q -f status=exited
docker ps -a  status=exited
docker ps -a -q status=exited
docker ps -a -q -f status=exited
docker ps  -f status=exited
docker rm -v aa61a438f74a
docker rm -v d26876d5ff41
docker images -f "dangling=true" -q
docker images -q
docker images 
docker rmi 007fcad05d90
docker rmi -f 007fcad05d
docker images 
cd /
docker run --name tr-activemq -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-activemq:2.1.1
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-postgres:2.1.1.19
docker images 
docker ps -a
docker rm 8a6fd763154a
docker rm -v 8a6fd763154a
docker stop 8a6fd763154a
docker rm -v 8a6fd763154a
docker images 
docker rmi 249f548e12b6
docker images 
docker rmi 53c8774da33b
docker ps -a
docker stop 92d2d78300bb
docker rm -v 92d2d78300bb
docker images
docker rmi 53c8774da33b
docker run --name tr-postgres -e POSTGRES_PASSWORD=theta -p 5432:5432 -p 9083:9083 -d 172.16.1.191:5000/thetaray/tr-postgres:2.1.1.19
docker run -d -p 8161:8161 --name tr-dc-mq webcenter/activemq:5.13.2
pip install cqlsh
sudo apt-get install cql
echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
sudo spt-get install cql
sudo apt-get install cql
sudo apt-get update
sudo apt-get install cql
pip install cqlsh
sudo apt install python-pip
pip install cqlsh
cqlsh 
cqlsh 172.31.36.169
cqlsh 172.31.36.169:9160
ifconfig
cqlsh 172.31.36.169
cqlsh 35.167.35.156
cqlsh 
cqlsh 172.31.36.169
ping 172.31.36.169
ping 35.167.35.156
cqlsh 172.31.36.169
ping 35.167.35.156
cqlsh 35.167.35.156
cqlsh 35.167.35.156:9160
cqlsh 172.31.36.169
cqlsh 172.31.36.169:9042
echo "deb http://www.apache.org/dist/cassandra/debian 36x main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
curl https://www.apache.org/dist/cassandra/KEYS | sudo apt-key add -
sudo apt-get install cassandra
sudo service cassandra status
cqlsh
sudo apt-get remove cql
sudo pip remove cql
sudo pip --help
sudo pip uninstall cql
sudo service cassandra stop
sudo apt-get install cassandra
sudo service cassandra start
cqlsh
sudo service cassandra status
sudo apt-get remove pip
sqlsh
cqlsh
cqlsh localhost
sudo pip remove cql
sudo pip uninstall cql
dpkg-reconfigure keyboard-configuration 
su 
ssh -i "/opt/aws/eyallevy.pem" ubuntu@ec2-35-167-35-156.us-west-2.compute.amazonaws.com
cd /opt/aws
cd /opt
ls
cd AWS
chmod 400 eyallevy.pem
ssh -i "/opt/AWS/eyallevy.pem" ubuntu@ec2-35-167-35-156.us-west-2.compute.amazonaws.com
ssh -i "/opt/AWS/eyallevy.pem" ubuntu@ec2-35-167-35-156.us-west-2.compute.amazonaws.com
ssh  ubuntu@ec2-35-167-35-156.us-west-2.compute.amazonaws.com
ssh -i "/opt/AWS/eyallevy.pem" ubuntu@ec2-35-167-35-156.us-west-2.compute.amazonaws.com
sudo service cassandra status
cqlsh
ifconfig
ifconfig /all
ifconfig -all
ifconfig --help
ifconfig -a
ifconfig netmask
ifconfig -avs
cqlsh
sudo pip uninstall cqlsh
sudo pip uninstall pip
sudo apt-get purge --auto-remove python-pip
sudo service cassandra status
sudo service cassandra restart
sudo service cassandra status
cqlsh
sudo apt-get remove cassandra
sudo apt-get install cassandra
cqlsh
sudo apt-get perge  cassandra
sudo apt-get --help
sudo apt-get purge  cassandra
sudo apt-get install cassandra
cqlsh
sudo apt-get update
sudo apt-get install cql
sudo apt-get install cqlsh
sudo nodetool status
whereis cassandra
ls /usr/sbin/cassandra 
ls /etc/cassandra 
sudo apt-get install cassandra-tools
cqlsh
whereis cqlsh
cqlsh
cqlsh localhost
sudo service cassandra status
cqlsh localhost
sudo vim ~/.bashrc
source ~/.bashrc
cqlsh 
cqlsh 127.0.0.1
sudo vim /etc/cassandra/cassandra.yaml 
sudo vi /etc/cassandra/cassandra.yaml 
sudo service cassandra restart
cat /etc/host
cat /etc/hosts
sudo vim  /etc/hosts
sudo service cassandra restart
sudo service cassandra status
cqlsh
cd /etc/docker
sudo cd /etc/docker
cd /etc/docker
sudo cd /etc/docker
sudo ls  /etc/docker
sudo ls  /etc/docker/aemon.json
sudo ls  /etc/docker/daemon.json
sudo cat /etc/docker/daemon.json
sudo mkdir -p /Data/thetaray/zeppelin/data
sudo mkdir -p /Data/thetaray/zeppelin/notebook
sudo mkdir -p /Data/thetaray/zeppelin/tmp
docker run -d --name tr-zeppelin     -p 8085:8080     -v /Data/thetaray/zeppelin/data:/opt/tr     -v /Data/thetaray/zeppelin/notebook:/usr/local/zeppelin/notebook     -v /Data/thetaray/zeppelin/tmp:/tmp     -e MASTER="local[*]"     -e ZEPPELIN_MEM="-Xmx4g"     -e SPARK_HOME=/usr/local/spark     -e SPARK_SUBMIT_OPTIONS="--driver-memory 8G"     docker-registry.thetaray-aws.com:5000/thetaray/tr-zeppelin:2.1.6
sudo docker service status
docker ps
docker run -d --name tr-zeppelin     -p 8085:8080     -v /Data/thetaray/zeppelin/data:/opt/tr     -v /Data/thetaray/zeppelin/notebook:/usr/local/zeppelin/notebook     -v /Data/thetaray/zeppelin/tmp:/tmp     -e MASTER="local[*]"     -e ZEPPELIN_MEM="-Xmx4g"     -e SPARK_HOME=/usr/local/spark     -e SPARK_SUBMIT_OPTIONS="--driver-memory 8G"     docker-registry.thetaray-aws.com:5000/thetaray/tr-zeppelin:2.1.6
docker images
sudo cat /etc/default/docker 
docker run -d --name tr-zeppelin     -p 8085:8080     -v /Data/thetaray/zeppelin/data:/opt/tr     -v /Data/thetaray/zeppelin/notebook:/usr/local/zeppelin/notebook     -v /Data/thetaray/zeppelin/tmp:/tmp     -e MASTER="local[*]"     -e ZEPPELIN_MEM="-Xmx4g"     -e SPARK_HOME=/usr/local/spark     -e SPARK_SUBMIT_OPTIONS="--driver-memory 8G"     docker-registry.thetaray-aws.com:5000/thetaray/tr-zeppelin:2.1.6
sudo vi /lib/systemd/system/docker.service
sudo systemctl daemon-reload
sudo service docker restart
ps -ef | grep docke
sudo service docker start
sudo cat /var/lib/docker/logs
sudo cat /var/lib/docker/log
journalctl -xe
sudo service docker start
systemctl status docker.service
cat /etc/docker/daemon.json
sudo cat /etc/docker/daemon.json
sudo rm -rf  /etc/docker/daemon.json
sudo cat /etc/docker/daemon.json
sudo service docker start
docker ps
docker run -d --name tr-zeppelin     -p 8085:8080     -v /Data/thetaray/zeppelin/data:/opt/tr     -v /Data/thetaray/zeppelin/notebook:/usr/local/zeppelin/notebook     -v /Data/thetaray/zeppelin/tmp:/tmp     -e MASTER="local[*]"     -e ZEPPELIN_MEM="-Xmx4g"     -e SPARK_HOME=/usr/local/spark     -e SPARK_SUBMIT_OPTIONS="--driver-memory 8G"     docker-registry.thetaray-aws.com:5000/thetaray/tr-zeppelin:2.1.6
docker exec -it tr-zeppelin bash
docker cp /opt/datasample/proxy.csv tr-zeppelin:/opt/tr/proxy.csv
docker exec -it tr-zeppelin bash
docker ps
cd /Data/thetaray/zeppelin/data/
ll
ll fixedproxy
cp fixedproxy/part-r-00000-8bdfcf20-b1f0-4401-bd4b-616e4a4c5aa7.csv proxy_fixed.csv
sudo cp fixedproxy/part-r-00000-8bdfcf20-b1f0-4401-bd4b-616e4a4c5aa7.csv proxy_fixed.csv
ll
docker ps
docker inspect tr-zeppelin | less
ll
cql
cqlsh
evolution
docker ps
docker run -d --name tr-zeppelin     -p 8085:8080     -v /Data/thetaray/zeppelin/data:/opt/tr     -v /Data/thetaray/zeppelin/notebook:/usr/local/zeppelin/notebook     -v /Data/thetaray/zeppelin/tmp:/tmp     -e MASTER="local[*]"     -e ZEPPELIN_MEM="-Xmx4g"     -e SPARK_HOME=/usr/local/spark     -e SPARK_SUBMIT_OPTIONS="--driver-memory 8G"     docker-registry.thetaray-aws.com:5000/thetaray/tr-zeppelin:2.1.6
docker start tr-zeppelin
docker ps
mvn org.apache.maven.plugins:maven-archetype-plugin:1.0-alpha-7:create 
mvn org.apache.maven.plugins:maven-archetype-plugin:1.0-alpha-7:create -DarchetypeGroupId=org.scala-tools.archetypes -DarchetypeArtifactId=scala-archetype-simple -DarchetypeVersion=1.2 -DremoteRepositories=http://scala-tools.org/repo-releases -DgroupId=com.thetaray -DartifactId=cassandra-scala
docker start tr-zeppelin
cqlsh
sudo mv /opt/git/cassandra-scala/QR_500K.zip /Data/thetaray/zeppelin/data/
sudo rm -rf  /Data/thetaray/zeppelin/data/QR_500K.zip 
sudo cp /opt/git/cassandra-scala/QR_500K.csv /Data/thetaray/zeppelin/data/
sudo apt-get install htop
htop
chrome
/opt/google/chrome/google-chrome --enable-plugins
google-chrome
google-chrome https://mail.google.com/mail/ca/u/0/#inbox
google-chrome https://mail.google.com/mail/ca/u/0/#inbox https://calendar.google.com/calendar/render#main_7
idea
cqlsh
htop
useradd activemq
sudo useradd activemq
mkdir /home/activemq
sudo mkdir /home/activemq
sudo chown activemq.activemq /home/activemq
wget http://apache.cs.uu.nl/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz
wget http://activemq.apache.org/path/tofile/apache-activemq-5.11.1-bin.tar.gz
sudo chown activemq.activemq /opt/activemq
ln -s /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64/activemq /etc/init.d/activemq
sudo ln -s /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64/activemq /etc/init.d/activemq
sudo gedit /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64/activemq
lst /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64
ls /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64
ll /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64
sudo chown -R activemq.activemq /opt/activemq
ll /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64
sudo gedit /opt/activemq/apache-activemq-5.13.0/bin/linux-x86-64/wrapper.conf 
sudo service activemq start
cd /opt/activemq/apache-activemq-5.13.0/
bin/activemq start
su - activemq
sudo chown -R eyallevy:eyallevy /opt/activemq
bin/activemq start
jps
ssh 172.16.1.108
ssh ubuntu@172.16.1.108
ping 172.16.1.108
sudo vim ~/.bashrc
ssh-add eyallevy.pem 
ssh ubuntu@172.16.1.108
ssh-add ~/.ssh/tr-key.pem 
chmod 600 ~/.ssh/tr-key.pem 
ssh-add ~/.ssh/tr-key.pem 
ssh ubuntu@172.16.1.108
ssh ubuntu@172.16.1.186
sudo vim ~/.bashrc
ssh-add ~/.ssh/tr-key.pem
ssh ubuntu@172.16.1.186
ssh ubuntu@172.16.1.108
ping http://172.16.1.186/
ping 172.16.1.186
ssh ec2-user@172.16.1.108
ssh ec2-usr@172.16.1.108
ssh EC2-user@172.16.1.108
ssh ec2-user@172.16.1.186
sudo apt-get install byzanz
byzanz-record-window 
byzanz
whereis byzanz
byzanz-record
byzanz-record -d 10 --delay=5 -x 0 -y 0 -w 1920 -h 1080 bug.gif
ll
cd /opt/
mkdir bugs
cd bugs/
mv ~/bug.gif .
byzanz-record -d 5 --delay=5 -x 0 -y 0 -w 1920 -h 1080 bug.gif
byzanz-record -d 5 --delay=5 -x 1920 -y 0 -w 1920 -h 1080 bug.gif
byzanz-record -d 5 --delay=3 -x 1920 -y 0 -w 1920 -h 1080 bug.gif
byzanz-record -d 10 --delay=3 -x 1920 -y 0 -w 1920 -h 1080 bug.gif
byzanz-record -d 20 --delay=3 -x 1920 -y 0 -w 1920 -h 1080 bug.gif
byzanz-record -d 10 --delay=3 -x 1920 -y 0 -w 1920 -h 1080 bug.gif
exit
scp 
scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186\Data
ll ec2-user@172.16.1.186\Data
ll
rm -rf ec2-user@172.16.1.186Data 
pwd
scp -P 2222 /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/Data
scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/Data
sudo scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/Data
sudo scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/home/ec2-user/
sudo scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/home/ec2-user/theta
scp /opt/datasample/API_8_DS2_en_csv_v2.csv ec2-user@172.16.1.186:/home/ec2-user/theta
ssh ec2-user@172.16.1.186
sudo . Anaconda3-4.2.0-Linux-x86_64.sh
ll
ls *.sh
ls -l *.sh
chmod +x Anaconda3-4.2.0-Linux-x86_64.sh 
ll
./Anaconda3-4.2.0-Linux-x86_64.sh 
ll
which python
python
python
head -10 part-0000
head -10 part-00000
head -1 part-00000
more part-00000
more output_file.csv 
. pycharm.sh
sudo apt-get install zsh
zsh
docker
docker images
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:LATEST
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres
sudo vi /lib/systemd/system/docker.service
sudo  systemctl daemon-reload
sudo service docker restart
ps -ef | grep docker
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres
docker run -d -p 5432:5432 --name tr-psql docker-registry.thetaray-aws.com:5000/thetaray/tr-postgres:2.1.2-SNAPSHOT.1583
docker images
docker ps
start tr-dc-mq
docker start tr-dc-mq
docker ps
sudo gedit /etc/hosts
git status
git reset HEAD
git clean -Df
git clean -df
git checkout .
git pull origin master
docker ps
sudo gedit /etc/hosts
ll /home/eyalevy
ll /home/eyallevy
head -10 proxy.csv 
sudo gedit /etc/hosts
curl localhost:9400/dataloader/suggestSchema/51
git status
mvn clean install
cd ../tr-spark-ml/
mvn clean install
git status
git pull origin master
mvn clean install -T 1C -P all
git pull
git status
git checkout -- .
git status
gut pull
git pull
mvn clean install -T 1C -P all
vim ~/.bashrc
sudo /etc/hosts
sudo /etc/host
sudo vim /etc/hosts
start start tr-psql
docker start tr-psql
docker start tr-dc-mq
git pull
git log
sudo sublime ~/.bashrc
sublime ~/.bashrc
sublimetext
sublime_text
vim  ~/.bashrc
docker images
docker start ca891b936f9d 96c35bce890b
docker container
docker --help
docker ps
docker ps -a -q -f status=exited
docker ps  -f status=exited
docker rm -v 7308842f3a23
docker rm -v 81cfaafeacca
docker ps  -f status=exited
docker images -f "dangling=true" -q
docker images 
docker rmi c54a2cc56cbb 53c8774da33b
docker images 
docker ps
docker container
docker ps -a -q -f status=exited
docker ps -a -q 
docker ps -a 
docker start tr-psql
docker start tr-dc-mq
docker start tr-psql
docker start tr-dc-mq
ifconfig
whoami
which
docker start tr-psql
docker start tr-dc-mq
sudo lshw -C display
>cat /proc/cpuinfo
sudo cat /proc/cpuinfo
cat /etc/systemd/logind.conf
sudo vim /etc/group
sudo addgroup hadoop
sudo adduser --ingroup hadoop hduser
su - hduser\
su - hduser
su - hduser
sudo chown -R hduser:hadoop /opt/hadoop-2.7.3/
su -hduser
su - hduser
zsh
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo gedit /etc/krb5kdc/kdc.conf
sudo kadmin.local
service krb5kdc start
sudo service krb5kdc start
sudo service kadmin start
kdb5_util create -r elevy -s
sudo service krb5kdc start
sudo ll /var/lib/krb5kdc/
sudo ls /var/lib/krb5kdc/
sudo cat /var/lib/krb5kdc/principal
sudo ls /var/lib/krb5kdc/
sudo cat /var/lib/krb5kdc/principal.ok
sudo service krb5kdc start
sudo ls -l /usr/lib/systemd/system/
sudo ls -l /usr/lib/systemd/system
sudo ls -l /usr/lib/systemd/
clear
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo sublime /etc/krb5kdc/kdc.conf
subl
sudo subl /etc/krb5kdc/kdc.conf
kdb5_util create -r EXAMPLE.COM -s
kdb5_util create -r elevy -s
sudo gedit /etc/krb5kdc/kadm5.acl
sudo subl /etc/krb5kdc/kadm5.acl
sudo kadmin.local
sudo dpkg-reconfigure krb5-kdc.
sudo dpkg-reconfigure krb5-kdc
sudo subl /etc/krb5.conf
service krb5kdc start
service krb5kdc status
cd /var/log; sudo tail -F daemon.log sulog user.log auth.log debug kern.log syslog dmesg messages kerberos/{krb5kdc,kadmin,krb5lib}.log
sudo invoke-rc.d krb5-admin-server restart
sudo invoke-rc.d krb5-kdc restart
sudo service krb5-admin-server status
klist -f
sudo subl /etc/krb5.conf
sudo subl /etc/ssh/sshd_config
sudo subl /opt/hadoop-2.7.3/etc/hadoop/core-site.xml
apt install zsh
apt-get install zsh
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
chsh -s `which zsh`
zsh
ls -la 
zsh
su - hduser
echo $SHELL
env | grep ^SHELL=
set SHELL=/bin/bash
su - hduser
kadmin -p elevy/admin@elevy
sudo apt-get purge krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get purge krb5-kdc krb5-admin-server
sudo apt-get purge krb5-clients
sudo apt autoremove
nmcli device show eth0 | grep IP4.DNS
nmcli device show lo | grep IP4.DNS
nm-tool
cat /etc/resolv.conf
sudo klist -e -k -t /etc/krb5kdc/kadm5.keytab
sudo klist -e -k -t /opt/admin.keytab
ktutil
klist -e -k -t /opt/admin.keytab
klist
ls /opt/admin.keytab 
ll /opt/admin.keytab 
chmod 777 /opt/admin.keytab
ll /opt/admin.keytab 
mkdir /opt/help/kerberos_backup
. /opt/help/backup.working.setup 
ifconfig
ifconfig -a
host
$host
$hostname
echo $hostname
clear
sudo apt install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo apt-get purge krb5-kdc krb5-admin-server
apt-get purge krb5-config krb5-locales krb5-user
sudo apt-get purge krb5-config krb5-locales krb5-user
dpkg --get-selections | grep -v deinstall | grep krb
sudo apt-get purge krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt autoremove
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get purge krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get purge krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get purge krb5-config krb5-locales krb5-user
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo rm -rf /var/lib/krb5kdc/principal
sudo krb5_newrealm
ll /var/lib/krb5kdc/principal
sudo ll /var/lib/krb5kdc/principal
sudo ls /var/lib/krb5kdc/principal
sudo ls -al/var/lib/krb5kdc/principal
sudo ls -al /var/lib/krb5kdc/principal
sudo rm -rf /var/lib/krb5kdc/principal
sudo ls -al /var/lib/krb5kdc
sudo rm -R /var/lib/krb5kdc
sudo ls -al /var/lib/krb5kdc
sudo krb5_newrealm
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo mkdir /var/lib/krb5kdc/
sudo krb5_newrealm
sudo dpkg-reconfigure krb5-kdc
sudo gedit /etc/krb5kdc/kdc.conf
kdb5_util create -r ThetaRayLTD.local -s
sudo kdb5_util create -r ThetaRayLTD.local -s
sudo subl /etc/krb5kdc/kadm5.acl
sudo kadmin.local
sudo subl /etc/krb5kdc/kadm5.acl
sudo service krb5-admin-server restart
sudo service krb5-kdc restart
kinit elevy/admin
sudo dpkg-reconfigure krb5-kdc
kinit elevy/admin
sudo subl /etc/krb5.conf
sudo subl /etc/krb.realms
klist -e -k -t /etc/krb5kdc/kadm5.keytab
sudo klist -e -k -t /etc/krb5kdc/kadm5.keytab
sudo ls /etc/krb5kdc/
kinit elevy/admin
kinit elevy/admin@ThetaRayLTD.local
klist
sudo klist
sudo dpkg-reconfigure krb5-kdc
sudo service krb5-admin-server restart
sudo service krb5-kdc restart
kinit elevy/admin@ThetaRayLTD.local
sudo dpkg-reconfigure krb5-kdc
sudo service krb5-admin-server restart
sudo service krb5-kdc restart
kinit elevy/admin@ThetaRayLTD.local
sudo service krb5-admin-server status
sudo service krb5-kdc status
sudo ls /etc/krb5kdc
sudo ls /etc/krb5kdc/kdc.conf
sudo gedit /etc/krb5kdc/kdc.conf
kadmin -p elevy/admin@ThetaRayLTD.local
kadmin -p elevy/admin@elevy
sudo dpkg-reconfigure krb5-kdc
sudo service krb5-admin-server restart
sudo service krb5-kdc restart
kinit elevy/admin@ThetaRayLTD.local
sudo kadmin.local
kinit elevy/admin@ThetaRayLTD.local
sudo apt-get install krb5-kdc
sudo apt-get install krb5-clients
kinit elevy/admin@ThetaRayLTD.local
sudo apt-get purge krb5-kdc krb5-admin-server
sudo apt-get purge krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo rm -rf  /etc/krb5.conf 
vim /var/lib/krb5kdc/
sudo rm -R /var/lib/krb5kdc
vim /var/lib/krb5kdc/
sudo apt-get purge krb5-config krb5-locales
dpkg --get-selections | grep -v deinstall | grep krb
ls /etc/krb5kdc/
sudo ls /etc/krb5kdc/
sudo ls /etc/krb5kdc
sudo ls /etc
cd /
find . -name "*krb5*"
sudo find . -name "*krb5*"
sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config
sudo apt-get install krb5-kdc krb5-admin-server
sudo krb5_newrealm
sudo subl /etc/krb5kdc/kdc.conf 
kdb5_util create -r thetaray.com -s
sudo kdb5_util create -r thetaray.com -s
sudo kadmin.local
sudo service krb5-admin-server restart
sudo service krb5-kdc restart
sudo dpkg-reconfigure krb5-kdc
sudo gedit /etc/krb5.conf
kinit elevy/admin@thetaray.com
kinit elevy/admin
sudo kdb5_util create -r thetaray.com -s
sudo kadmin.local
kinit elevy/admin
klist -e -k -t /etc/krb5kdc/kadm5.keytab
sudo klist -e -k -t /etc/krb5kdc/kadm5.keytab
kadmin -p elevy/admin@thetaray.com
kutil
ktutil
klist -e -k -t /opt/admin.keytab
su - hduser
su - hduser
kadmin
sudo vim /etc/hosts
ls /tmp
rm -f /tmp/krb*
sudo rm -f /tmp/krb*
ktutil
kinit -kt /opt/admin.keytab elevy/admin@thetaray.com 
klist -e
sudo add-apt-repository ppa:webupd8team/java
sudo apt update
sudo apt install oracle
sudo apt install oracle-java8-unlimited-jce-policy
sudo service cassandra status
su - hduser
ifconfig
hostname -a
hostname 
hostname -d
hostname -f
sudo vim /etc/hosts
. backup.working.setup 
sudo vim /etc/hosts
netstat | grep 9000
netstat 
sudo vim /etc/hosts
git checkout MVP-3081
git pull
git checkout feature-MVP-3081 
git pull
git diff master
clear
git diff feature-MVP-3081..master
clear
mvn clean install

mvn clean install
git log 
su - hduser
git pull
ls /opt
ls /opt/Dropbox/
ls /opt/Dropbox/idea/
ls /opt/Dropbox/idea/bin
sudo mv /opt/sublime_text /opt/Dropbox/
ls /opt/
ls /opt/D
ls /opt/Dropbox/
ls /tmp/
ls -la /tmp/
sudo add-apt-repository ppa:webupd8team/sublime-text-3
sudo apt-get update
sudo apt-get install sublime-text-installer
sudo dpkg --configure -a.
sudo dpkg --configure -a
sudo apt-get remove sublime-text-installer
sudo dpkg --configure -a
sudo apt-get remove sublime-text-installer
sblm
subl
sudo apt-get install sublime-text-installer
ls /usr/share/applications/
zsh
cd ~/.zsh
find zsh-autosuggestions
whereis  zsh-autosuggestions
echo $ZSH_CUSTOM
${ZSH_CUSTOM}
$ZSH
sudo subl ~/.bashrc
source ~/.bashrc
$ZSH
ls ~/.oh-my-zsh/
ls -la ~/.oh-my-zsh/
zsh
which zsh
zsh 
vim /opt/Dropbox/help/backup.working.setup 
which zsh
which bash
chsh
${which zsh}
$(which zsh)
$(whoami)
exit
zsh
cd /opt/Dropbox/tools/idea/
cd bin 
idea.sh
./idea.sh
